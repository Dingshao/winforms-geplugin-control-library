#summary A simple winform example

= Introduction =

This form shows the most basic set up of the GEWebBrowser, there are no other controls added.

= Details =

Here the plugin behaves exactly as it would with the default set-up in a web page. You can use the mouse and keys to navigate when the control has focus.

The dynamic type returned by the PluginReady event allows one to work seemlessly with the GEPlugin object, just as if you were programming in the native javaScript API.

The GEPlugin object is also available outside the PluginReady event from the GEWebBrowser's Plugin property.

However, it is worth noting that the other controls ([GEStatusStrip], [GEToolStrip], [KmlTreeView]) and the other helper classes ([GEHelpers], [KmlHelpers], [GEOptions], etc) in this library offer much cleaner, safer, managed, ways to work with the Api.

= Example =

This example presumes you have dragged a single instance a the GEWebBrowser control onto an empty form.

{{{

namespace ExampleFormTest
{
    using System;
    using System.Windows.Forms;
    using FC.GEPluginCtrls;

    public partial class Form1 : Form
    {
        private dynamic ge;

        public Form1()
        {
            InitializeComponent();

            geWebBrowser1.LoadEmbededPlugin();
            geWebBrowser1.PluginReady += (o, e) =>
            {
                // Here you can now use 'ge' exactly as you would
                // in the native javascript api. It is worth noting 
                // that any direct calls to Api members should be
                // wrapped in a try/catch blocks for RuntimeBinder exceptions
                ge = e.ApiObject;
            };
        }
    }
}

}}}

<wiki:gadget url="http://earthapi.googlepages.com/ad.xml" border="0" width="728" height="90" />