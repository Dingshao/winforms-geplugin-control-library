<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FC.GEPluginCtrls</name>
    </assembly>
    <members>
        <member name="T:FC.GEPluginCtrls.GEWindow">
            <summary>
            Wrapper for the GEWindow com object.
            Maps all its getter and setter methods to managed properties
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWindow.ge">
            <summary>
            The plugin object 
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWindow.window">
            <summary>
            The options object 
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWindow.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GEWindow class.
            </summary>
            <param name="ge">the plugin object</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWindow.Focus">
            <summary>
            Gives the Google Earth object focus.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWindow.Blur">
            <summary>
            Removes focus from the Google Earth object.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWindow.Visibility">
            <summary>
            Gets or sets a value indicating whether Google Earth is visible inside the browser
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.JSFunction">
            <summary>
            A collection the names of javascript functions that should be available in the active document.
            These are wrapper functions to allow access to objects outside the Google Earth Api.
            </summary>
            <remarks>
            This collection can be thought of as a simple kind of an interface for javascipt methods in an active document.
            That is, any function name listed here should be present in a document that is designed to work with the controls.
            </remarks>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.AddEventListener">
            <summary>
            The javascript method name of the google.earth.addEventListener wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.CreateInstance">
            <summary>
            The javascript method name of the google.earth.createInstance wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.DoGeocode">
            <summary>
            The javascript method name of the  GClientGeocoder.getLatLng wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.Evaluate">
            <summary>
            The javascript method name of the eval wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.Execute">
            <summary>
            The javascript method name of the  window.execScript wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.FetchKml">
            <summary>
            The javascript method name of the google.earth.fetchKml wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.GetLanguage">
            <summary>
            The javascript method name of the google.earth.getLanguage wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.IsInstalled">
            <summary>
            The javascript method name of the google.earth.isInstalled wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.RemoveEventListener">
            <summary>
            The javascript method name of the google.earth.removeEventListener wrapper.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.JSFunction.SetLanguage">
            <summary>
            The javascript method name of the google.earth.setLanguage wrapper.
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GEWebBrowser">
            <summary>
            This browser control holds the Google Earth Plug-in,
            it also provides wrapper methods to work with the Google.Earth namespace
            </summary>
            <summary>
            Designer file
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWebBrowser.kmlObjectCacheSyncEvents">
            <summary>
            Cache of kml event objects
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWebBrowser.external">
            <summary>
            External is A COM Visible class that holds all the public methods
            to be called from javascript. An instance of this is set
            to the base object's ObjectForScripting property in the constuctor.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWebBrowser.geplugin">
            <summary>
            Use the IGEPlugin COM interface. 
            Equivalent to QueryInterface for COM objects
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWebBrowser.imageryBase">
            <summary>
            Current plug-in imagery database
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWebBrowser.pluginIsReady">
            <summary>
            Indicates whether the plug-in is ready to use
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.#ctor">
            <summary>
            Initializes a new instance of the GEWebBrowser class.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.AddEventListener(System.Object,FC.GEPluginCtrls.EventId,System.String,System.Boolean)">
            <summary>
            Wrapper for the the google.earth.addEventListener method
            </summary>
            <param name="feature">The target feature</param>
            <param name="action">The event Id</param>
            <param name="javascript">The name of javascript callback function to use, or an anonymous function</param>
            <param name="useCapture">Optionally use event capture</param>
            <example>GEWebBrowser.AddEventListener(object, "click", "someFunction");</example>
            <example>GEWebBrowser.AddEventListener(object, "click", "function(event){alert(event.getType);}");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.CreateInstance(FC.GEPluginCtrls.ImageryBase)">
            <summary>
            Wrapper for the  google.earth.createInstance method
            See: http://code.google.com/apis/earth/documentation/reference/google_earth_namespace.html#70288485024d8129dd1c290fb2e5553b
            </summary>
            <param name="database">The database name</param>
            <example>GEWebBrowser.CreateInstance(ImageryBase.Moon);</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.ExecuteBatch">
            <summary>
            Wrapper for the google.earth.executeBatch method
            See: http://code.google.com/apis/earth/documentation/reference/google_earth_namespace.html#b26414915202d39cad12bcd5bd99e739
            Efficiently executes an arbitrary, user-defined function (the batch function),minimizing
            the amount of overhead incurred during cross-process communication between the browser
            and Google Earth Plugin. 
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.FetchKml(System.String)">
            <summary>
            Load a remote kml/kmz file 
            This function requires a 'twin' LoadKml function in javascript
            this twin function will call "google.earth.fetchKml"
            </summary>
            <param name="url">string path to a kml reasource</param>
            <example>GEWebBrowser.FetchKml("http://www.site.com/file.kml");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.FetchKml(System.Uri)">
            <summary>
            Load a remote kml/kmz file 
            This function requires a 'twin' LoadKml function in javascript
            this twin function will call "google.earth.fetchKml"
            </summary>
            <param name="url">Uri to a kml reasource</param>
            <example>GEWebBrowser.FetchKml("http://www.site.com/file.kml");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.FetchKml(System.String,System.String)">
            <summary>
            Load a remote kml/kmz file 
            This function requires a 'twin' LoadKml function in javascript
            this twin function will call "google.earth.fetchKml"
            </summary>
            <param name="url">path to a kml/kmz file</param>
            <param name="completionCallback">name of javascript callback function to call after fetching completes</param>
            <example>GEWebBrowser.FetchKml("http://www.site.com/file.kml", "createCallback_(OnKmlLoaded)");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.FetchKmlSynchronous(System.String,System.Int32)">
            <summary>
            Same as FetchKml but returns the IKmlObject
            </summary>
            <param name="url">path to a kml/kmz file</param>
            <param name="timeout">time to wait for return in ms</param>
            <returns>The kml as a kmlObject</returns>
            <example>GEWebBrowser.FetchKmlSynchronous("http://www.site.com/file.kml");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.FetchKmlLocal(System.String)">
            <summary>
            Loads a local kml file 
            </summary>
            <param name="path">path to a local kml file</param>
            <example>GWEebBrower.FetchKml("C:\file.kml");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.ParseKml(System.String)">
            <summary>
            GEPlugin.parseKml() wrapper
            Parses a kml string and loads it into the plugin
            </summary>
            <param name="kml">kml string to process</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.ParseKmlObject(System.Object)">
            <summary>
            Parses a KmlObject  and loads it into the plugin.
            </summary>
            <param name="kml">kml object to process</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.InvokeDoGeocode(System.String)">
            <summary>
            Invokes the javascript function 'doGeocode'
            Automatically flys to the location if one is found
            </summary>
            <param name="input">the location to geocode</param>
            <returns>the point object (if any)</returns>
            <example>GEWebBrowser.InvokeDoGeocode("London");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.InjectJavascript(System.String)">
            <summary>
            Inject a javascript element into the document head
            </summary>
            <param name="javascript">the script code</param>
            <example>GEWebBrowser.InjectJavascript("var say=function(msg){alert(msg);}");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.InvokeJavascript(System.String)">
            <summary>
            Executes a script function defined in the currently loaded document. 
            </summary>
            <param name="function">The name of the function to invoke</param>
            <returns>The result of the evaluated function</returns>
            <example>GEWebBrowser.InvokeJavascript("say");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.InvokeJavascript(System.String,System.Object[])">
            <summary>
            Executes a script function that is defined in the currently loaded document. 
            </summary>
            <param name="function">The name of the function to invoke</param>
            <param name="args">any arguments</param>
            <returns>The result of the evaluated function</returns>
            <example>GEWebBrowser.InvokeJavascript("say", new object[] { "hello" });</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.KillAllPluginProcesses">
            <summary>
            Kills all running geplugin processes on the system
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.LoadEmbededPlugin">
            <summary>
            Load the embeded html document into the browser 
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.RemoveEventListener(System.Object,FC.GEPluginCtrls.EventId,System.String,System.Boolean)">
            <summary>
            Wrapper for the the google.earth.removeEventListener method
            </summary>
            <param name="feature">The target feature</param>
            <param name="action">The event Id</param>
            <param name="javascript">Optional, the name of the js function (if any) that was added as the event handler</param>
            <param name="useCapture">Optional, use event capture</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.ScreenGrab">
            <summary>
            Take a 'screen grab' of the current GEWebBrowser view
            </summary>
            <returns>bitmap image</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.SetLanguage(System.String)">
            <summary>
            Set the plugin langauge
            </summary>
            <param name="code">The language code to use</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.Refresh">
            <summary>
            Reloads the document currently displayed in the control
            Overides the default WebBrowser Refresh method
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.OnPluginReady(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Method for raising the PluginReady event
            </summary>
            <param name="sender">The browser instance holding the plugin</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.OnKmlEvent(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Method for raising the KmlEvent event
            </summary>
            <param name="sender">the kml event</param>
            <param name="e">The eventid</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.OnKmlLoaded(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Method for raising the KmlLoaded event
            </summary>
            <param name="sender">The kmlObject object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.OnScriptError(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Method for raising the ScriptError event
            </summary>
            <param name="sender">The sending object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.OnPluginEvent(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Method for raising the PluginEvent event
            </summary>
            <param name="sender">The sending object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.OnViewEvent(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Method for raising the viewchange events
            </summary>
            <param name="sender">The GEView object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="F:FC.GEPluginCtrls.GEWebBrowser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEWebBrowser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.GEWebBrowser.PluginReady">
            <summary>
            Raised when the plugin is ready
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.GEWebBrowser.KmlEvent">
            <summary>
            Raised when there is a kmlEvent
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.GEWebBrowser.KmlLoaded">
            <summary>
            Raised when a kml/kmz file has loaded
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.GEWebBrowser.ScriptError">
            <summary>
            Raised when there is a script error in the document 
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.GEWebBrowser.PluginEvent">
            <summary>
            Rasied when there is a GEPlugin event
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.GEWebBrowser.ViewEvent">
            <summary>
            Rasied when there is a viewchangebegin, viewchange or viewchangeend event 
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.Plugin">
            <summary>
            Gets the plugin instance associated with the control
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.ImageyBase">
            <summary>
            Gets or sets the current imagery base for the plug-in
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.PluginIsReady">
            <summary>
            Gets a value indicating whether the plug-in is ready
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.RedirectLinksToSystemBrowser">
            <summary>
            Gets or sets a value indicating whether to redirect html links to the system browser
            Default is true, setting this false opens links inside the GEWebBrowser control.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.AllowWebBrowserDrop">
            <summary>
            Gets or sets a value indicating whether the  control navigates to documents that are dropped onto it.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.ContextMenuStrip">
            <summary>
            Gets or sets the System.Windows.Forms.ContextMenuStrip associated with this control
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.ScrollBarsEnabled">
            <summary>
            Gets or sets a value indicating whether scroll bars are displayed in the control.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.IsWebBrowserContextMenuEnabled">
            <summary>
            Gets or sets a value indicating whether the shortcut menu of the control is enabled.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.WebBrowserShortcutsEnabled">
            <summary>
             Gets or sets a value indicating whether keyboard shortcuts are enabled within the control.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEWebBrowser.KmlObjectCacheSyncEvents">
            <summary>
            Gets thread event handles for IKmlObjects collected.
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.IExternal">
            <summary>
            This interface should be implemented by any object
            that is designed to act as the interface between javascript and managed code
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.IExternal.InvokeCallBack(System.String,System.Object)">
            <summary>
            Can be called from javascript to invoke method
            </summary>
            <param name="name">the name of method to be called</param>
            <param name="parameters">array of parameter objects</param>
        </member>
        <member name="M:FC.GEPluginCtrls.IExternal.Ready(System.Object)">
            <summary>
            Should be called from javascript when the plugin is ready
            </summary>
            <param name="ge">the plugin instance</param>
        </member>
        <member name="M:FC.GEPluginCtrls.IExternal.Error(System.String,System.String)">
            <summary>
            Should be called from javascript when there is an error
            </summary>
            <param name="type">the error type</param>
            <param name="message">the error message</param>
        </member>
        <member name="M:FC.GEPluginCtrls.IExternal.KmlEventCallBack(System.Object,System.String)">
            <summary>
            Should be called from javascript when there is a kml event
            </summary>
            <param name="kmlEvent">the kml event</param>
            <param name="action">the event id</param>
        </member>
        <member name="M:FC.GEPluginCtrls.IExternal.PluginEventCallBack(System.Object,System.String)">
            <summary>
            Should be called from javascript when there is a GEPlugin event
            </summary>
            <param name="sender">The plugin object</param>
            <param name="action">The event action</param>
        </member>
        <member name="E:FC.GEPluginCtrls.IExternal.PluginReady">
            <summary>
            Raised when the plugin is ready
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.IExternal.KmlEvent">
            <summary>
            Raised when there is a kml event
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.IExternal.KmlLoaded">
            <summary>
            Raised when a kml/kmz file has loaded
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.IExternal.ScriptError">
            <summary>
            Raised when there is a script error in the document 
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GETourPlayer">
            <summary>
            Wrapper for the GETourPlayer com object.
            Maps all its getter and setter methods to managed properties
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GETourPlayer.ge">
            <summary>
            The plugin object 
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GETourPlayer.tourPlayer">
            <summary>
            The options object 
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GETourPlayer.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GETourPlayer class.
            </summary>
            <param name="ge">the plugin object</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GETourPlayer.SetTour(System.Object)">
            <summary>
            Enters the given tour object, exiting any other currently active tour.
            This method does not automatically begin playing the tour.
            If the argument is null, then any currently active tour is exited and normal globe navigation is enabled.
            </summary>
            <param name="tour">A tour object (KmlTour)</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GETourPlayer.Play">
            <summary>
            Plays the currently active tour.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GETourPlayer.Pause">
            <summary>
            Pauses the currently active tour.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GETourPlayer.Reset">
            <summary>
            Resets the currently active tour, stopping playback and rewinding to the start of the tour.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GETourPlayer.CurrentTime">
            <summary>
            Gets or sets a value indicating the current elapsed playing time of the active tour, in seconds.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GETourPlayer.Duration">
            <summary>
            Gets the total duration of the active tour, in seconds.
            If no tour is loaded, the behavior of this method is undefined.
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.KmlTreeView">
            <summary>
            The KmlTree view provides a quick way to display kml content
            </summary>
            <summary>
            Designer file
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.IGEControls">
            <summary>
            This interface should be implemented by any controls that work with the browser
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.IGEControls.SetBrowserInstance(FC.GEPluginCtrls.GEWebBrowser)">
            <summary>
            Tell the control the instance of GEWebBrowser to work with
            </summary>
            <param name="instance">The GEWebBrowser instance</param>
        </member>
        <member name="F:FC.GEPluginCtrls.KmlTreeView.geplugin">
            <summary>
            The plugin
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.KmlTreeView.htmlDocument">
            <summary>
            The current document
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.KmlTreeView.gewb">
            <summary>
            The current browser
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.#ctor">
            <summary>
            Initializes a new instance of the KmlTreeView class.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.#ctor(FC.GEPluginCtrls.GEWebBrowser)">
            <summary>
            Initializes a new instance of the KmlTreeView class.
            </summary>
            <param name="browser">The GEWebBrowser instance to work with</param>
            <remarks>Equivalent to initializing then calling <see cref="M:FC.GEPluginCtrls.KmlTreeView.SetBrowserInstance(FC.GEPluginCtrls.GEWebBrowser)"/></remarks>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.#ctor(FC.GEPluginCtrls.GEWebBrowser,System.Object)">
            <summary>
            Initializes a new instance of the KmlTreeView class.
            </summary>
            <param name="browser">The GEWebBrowser instance to work with</param>
            <param name="kmlObject">A kml object to parse into the tree</param>
            <remarks>
            Equivalent to initializing, calling <see cref="M:FC.GEPluginCtrls.KmlTreeView.SetBrowserInstance(FC.GEPluginCtrls.GEWebBrowser)"/>
            then calling ParseKmlObject 
            </remarks>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.ParseKmlObject(System.Object)">
            <summary>
            Recursively parses a kml object into the tree
            </summary>
            <param name="kmlObject">The kml object to parse</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.ParseKmlObject(System.Object[])">
            <summary>
            Recursively parses a collection of kml objects into the tree
            </summary>
            <param name="kmlObject">The kml objects to parse</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.SetBrowserInstance(FC.GEPluginCtrls.GEWebBrowser)">
            <summary>
            Set the browser instance for the control to work with
            </summary>
            <param name="browser">The GEWebBrowser instance</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.GetNodeByApiId(System.String)">
            <summary>
             Returns the index of the first occurrence of a tree node with the specified key.
             As the key is automatically set from the kmlObject id these should be unique.
            </summary>
            <param name="id">The object id</param>
            <returns>The treenode that represents the object</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.OnDoubleClick(System.EventArgs)">
            <summary>
            Raised when a tree node is double clicked
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raised after a tree node has collapsed
            </summary>
            <param name="e">Event Arugments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raised after a tree node has expanded
            </summary>
            <param name="e">Event Arugments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Called when a tree node is checked
            </summary>
            <param name="e">Event Arugments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the user clicks on the control (TODO)
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.CreateKmlTreeNode(System.Object)">
            <summary>
            Recursively iterates through a Kml object adding any child features to the tree
            </summary>
            <param name="feature">The object to parse</param>
            <returns>The current tree node</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.CheckAllChildNodes(FC.GEPluginCtrls.KmlTreeViewNode,System.Boolean)">
            <summary>
            Sets the checked state of any child nodes to the given checkState
            </summary>
            <param name="node">The starting node to check from</param>
            <param name="check">The desired check state of the node, true is checked, false unchecked.
            Default is true</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.CheckAllParentNodes(FC.GEPluginCtrls.KmlTreeViewNode)">
            <summary>
            Sets the checked state of any parent nodes to true
            </summary>
            <param name="node">The starting node to check from</param>
        </member>
        <member name="F:FC.GEPluginCtrls.KmlTreeView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.KmlTreeView.imageList1">
            <summary>
            The image list for the tree nodes
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.BalloonMinimumHeight">
            <summary>
            Gets or sets the minimum height of any balloons triggered from the control
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.BalloonMinimumWidth">
            <summary>
            Gets or sets the minimum width of any balloons triggered from the control
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.CheckAllChildren">
            <summary>
            Gets or sets a value indicating whether the treeview should check all children when a parent is checked. Default True
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ExpandVisibleFeatures">
            <summary>
            Gets or sets a value indicating whether to expand the tree node based on the kml object's visiblity.
            If true and the kml object is visible the node expands on construction.
            The default setting is false.
            <remarks>Please note network links have a further setting to allow this behavior <see cref="P:FC.GEPluginCtrls.KmlTreeView.ExpandVisibleNetworkLinks"/></remarks>
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ExpandVisibleNetworkLinks">
            <summary>
            Gets or sets a value indicating whether to expand the tree nodes based on the networklink's visiblity.
            If true, and the networklink is visible (and <see cref="P:FC.GEPluginCtrls.KmlTreeView.ExpandVisibleFeatures"/> is set to true)
            the node expands on construction.
            The default setting is false.
            <remarks>
            Setting this to true can cause the tree to take a long time to load a large chains of networklinks
            if they themselves are set to visible.
            </remarks>
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ExpandNetworkLinkContentOnLoad">
            <summary>
            Gets or sets a value indicating whether the treeview should expand to show the contents of networklinks 
            when they are loaded. Default true.
            <remarks>
            When set to true the tree gives better visual feedback when links have finished loading.
            </remarks>
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.FlyToOnDoubleClickNode">
            <summary>
            Gets or sets a value indicating whether the plugin should 'fly to' the location (if any) of the
            feature represented by the treenode
            The default setting is true
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.OpenBalloonsOnDoubleClick">
            <summary>
            Gets or sets a value indicating whether to open the balloon (if any) when
            feature represented by the treenode is double clicked
            The default setting is true
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.UseUnsafeHtmlBalloons">
            <summary>
            Gets or sets a value indicating whether to use unsafe html balloons (if any) when
            feature represented by the treenode is double clicked
            The default setting is false
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.UseDescriptionsForToolTips">
            <summary>
            Gets or sets a value indicating whether nodes should use the kml descripton for their tooltip text
            The default setting is false and the snippet is used instead.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ShowNodeToolTips">
            <summary>
            Gets or sets a value indicating whether ToolTips are show for a node. By default the snippet is used if turned on. Default is true
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that
            the user drags onto it.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.CheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes are displayed next to
            the tree nodes in the tree view control.
            </summary>
            <remarks>Checkboxes are used to control the visibility of the kml feature they represent</remarks>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ContextMenuStrip">
            <summary>
            Gets or sets the context menu strip for the control
            </summary>
            <remarks>TODO: context menu for networklinks, etc</remarks>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ImageIndex">
            <summary>
            Gets or sets the image-list index value of the default image that is displayed
            by the tree nodes.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ImageList">
            <summary>
            Gets or sets the ImageList that contains the icons used by the tree nodes.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.ImageKey">
            <summary>
            Gets or sets the key of the default image shoe when a node is in an unselected state.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.SelectedImageKey">
            <summary>
            Gets or sets the key of the default image shown when a node is in a selected state.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.SelectedImageIndex">
            <summary>
             Gets or sets the image list index value of the image that is displayed when
             a tree node is selected.
            </summary>
            <remarks>TODO: tri-state nodes</remarks>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.StateImageList">
            <summary>
            Gets or sets the image list used for indicating the state of the TreeView
            and its nodes.
            </summary>
            <remarks>TODO: tri-state nodes</remarks>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeView.Nodes">
            <summary>
            Gets the collection of Nodes that are assigned to the control
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GEStatusStrip">
            <summary>
            Designer file
            </summary>
            <summary>
            The GEStatusStrip shows various information about the plug-in
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.apiVersionStatusLabel">
            <summary>
            The api version status label
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.browserVersionStatusLabel">
            <summary>
            The browser version status label
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.pluginVersionStatusLabel">
            <summary>
            The plug-in version status label
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.streamingProgressBar">
            <summary>
            The streaming progress bar
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.streamingStatusLabel">
            <summary>
            The streaming status label
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEStatusStrip.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEStatusStrip.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.geplugin">
            <summary>
            Use the IGEPlugin COM interface. 
            Equivalent to QueryInterface for COM objects
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.gewb">
            <summary>
            An instance of the current browser
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.interval">
            <summary>
            Timer interval in miliseconds
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.timer">
            <summary>
            Timer used when polling data
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.streamingStatusLabelVisible">
            <summary>
            Indicates whether the streaming status label is visible
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.streamingProgressBarVisible">
            <summary>
            Indicates whether the streaming progress bar is visible
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.apiVersionStatusLabelVisible">
            <summary>
            Indicates whether the api version label is visible
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.pluginVersionStatusLabelVisible">
            <summary>
            Indicates whether the plug-in version label is visible
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEStatusStrip.browserVersionStatusLabelVisible">
            <summary>
            Indicates whether the browser version label is visible
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEStatusStrip.#ctor">
            <summary>
            Initializes a new instance of the GEStatusStrip class.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEStatusStrip.SetBrowserInstance(FC.GEPluginCtrls.GEWebBrowser)">
            <summary>
            Set the browser instance for the control to work with
            </summary>
            <param name="browser">The GEWebBrowser instance</param>
            <example>GEToolStrip.SetBrowserInstance(GEWebBrowser)</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEStatusStrip.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Timer tick callback function
            </summary>
            <param name="sender">The sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:FC.GEPluginCtrls.GEStatusStrip.Interval">
            <summary>
            Gets or sets the timer interval for polling data
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEStatusStrip.ShowStreamingProgressBar">
            <summary>
            Gets or sets a value indicating whether the progress bar is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEStatusStrip.ShowStreamingStatusLabel">
            <summary>
            Gets or sets a value indicating whether the streaming label is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEStatusStrip.ShowBrowserVersionStatusLabel">
            <summary>
            Gets or sets a value indicating whether the browser version label is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEStatusStrip.ShowApiVersionStatusLabel">
            <summary>
            Gets or sets a value indicating whether the api version label is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEStatusStrip.ShowPluginVersionStatusLabel">
            <summary>
            Gets or sets a value indicating whether the plug-in version label is visible
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GEEventArgs">
            <summary>
            Custom event arguments 
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEEventArgs.#ctor">
            <summary>
            Initializes a new instance of the GEEventArgs class
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GEEventArgs class
            </summary>
            <param name="apiObject">Plugin API object to initialise with.</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GEEventArgs class
            </summary>
            <param name="message">Event message</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the GEEventArgs class
            </summary>
            <param name="message">Event message</param>
            <param name="data">Event data</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEEventArgs.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the GEEventArgs class
            </summary>
            <param name="message">Event message</param>
            <param name="data">Event data</param>
            <param name="apiObject">Event data object</param>
        </member>
        <member name="P:FC.GEPluginCtrls.GEEventArgs.Message">
            <summary>
            Gets or sets the event message
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEEventArgs.Data">
            <summary>
            Gets or sets the event data
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEEventArgs.ApiObject">
            <summary>
            Gets or sets the event data ApiObject 
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.Geo.Maths">
            <summary>
            Various Geodesic methods to work with the plugin api
            This class is based on the javascript library geojs by Roman Nurik
            See http://code.google.com/p/geojs/
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.Geo.Maths.EarthMeanRadiusKilometres">
            <summary>
             Earth’s mean radius in Kilometres
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.Geo.Maths.EarthMeanRadiusMiles">
            <summary>
             Earth’s mean radius in miles
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.Geo.Maths.MilesToKilometresRatio">
            <summary>
            Miles To Kilometres Conversion ratio.
            </summary>
            <remarks>divide by to get miles to km, multiply to get km to miles</remarks>
        </member>
        <member name="F:FC.GEPluginCtrls.Geo.Maths.FeetToMetresRatio">
            <summary>
            Feet to Metres conversion ratio.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.BearingFinal(FC.GEPluginCtrls.Geo.Coordinate,FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Get the final bearing from one Coordinate to another
            </summary>
            <param name="start">the start Coordinate</param>
            <param name="destination">the destination Coordinate</param>
            <returns>The final bearing from start to destination</returns>
            <remarks>http://williams.best.vwh.net/avform.htm</remarks>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.BearingInitial(FC.GEPluginCtrls.Geo.Coordinate,FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Get the inital bearing from one Coordinate to another
            </summary>
            <param name="start">the starting Coordinate</param>
            <param name="destination">the destination Coordinate</param>
            <remarks>http://williams.best.vwh.net/avform.htm</remarks>
            <returns>The inital bearing from start to destination</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.ConvertDegreesToRadians(System.Double)">
            <summary>
            Converts decimal degrees to radians
            </summary>
            <param name="degrees">value in degrees</param>
            <returns>value in radians</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.ConvertRadiansToDegrees(System.Double)">
            <summary>
            Converts radians to decimal degrees
            </summary>
            <param name="radains">value in radians</param>
            <returns>value in degrees</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.ConvertHeadingToBearing(System.Double)">
            <summary>
            Converts a heading in the range [-180,180] to a bearing in the range [0,360] 
            </summary>
            <param name="heading">heading in the range [-180,180]</param>
            <returns>bearing in the range [0,360]</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.ConvertKilometresToMiles(System.Double)">
            <summary>
            Convert Kilometres To Miles 
            </summary>
            <param name="kilometres">distance in kilometrees</param>
            <returns>distance in miles</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.ConvertMilesToKilometres(System.Double)">
            <summary>
            Convert Miles To Kilometres
            </summary>
            <param name="miles">distance in miles</param>
            <returns>distance in kilometrees</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.DistanceCosine(System.Object,System.Object)">
            <summary>
            Returns the distance in miles or kilometers of any two latitude / longitude points.
            </summary>
            <param name="origin">The start api object </param>
            <param name="destination">The destination api object</param>
            <returns>Distance in kilometers</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.DistanceCosine(System.Double[],System.Double[])">
            <summary>
            Returns the distance in miles or kilometers of any two latitude / longitude points.
            </summary>
            <param name="origin">The start latitude and longitude </param>
            <param name="destination">The destination latitude and longitude </param>
            <returns>Distance in kilometers</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.DistanceCosine(FC.GEPluginCtrls.Geo.Coordinate,FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Returns the distance in miles or kilometers of any two latitude / longitude points.
            </summary>
            <param name="origin">The start Coordinate</param>
            <param name="destination">The destination Coordinate</param>
            <returns>Distance in kilometers</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.DistanceHaversine(System.Object,System.Object)">
            <summary>
            Returns the distance in miles or kilometers of any two latitude / longitude points.
            </summary>
            <param name="origin">The start api object </param>
            <param name="destination">The destination api object</param>
            <returns>Distance in kilometers</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.DistanceHaversine(System.Double[],System.Double[])">
            <summary>
            Returns the distance in miles or kilometers of any two latitude / longitude points.
            </summary>
            <param name="origin">The start latitude and longitude </param>
            <param name="destination">The destination latitude and longitude </param>
            <returns>Distance in kilometers</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.DistanceHaversine(FC.GEPluginCtrls.Geo.Coordinate,FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Returns the distance in miles or kilometers of any two latitude / longitude points.
            </summary>
            <param name="origin">The start Coordinate</param>
            <param name="destination">The destination Coordinate</param>
            <returns>Distance in kilometers</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.NormaliseAngle(System.Double)">
            <summary>
            Keep a number in the [0,PI] range
            </summary>
            <param name="radians">value in radians</param>
            <returns>normalised angle in radians</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.FixLatitude(System.Double)">
            <summary>
             Normalises a latitude to the [-90,90] range.
             Latitudes above 90 or below -90 are constrained rather than wrapped.
            </summary>
            <param name="latitude">The latitude in degrees to normalize.</param>
            <returns>Latitude within the [-90,90] range</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.FixLongitude(System.Double)">
            <summary>
            Normalises a longitude to the [-180,180] range.
            Longitudes above 180 or below -180 are wrapped.
            If the wrapped value is exactly equal to min or max, favors max, unless favorMin is true.
            </summary>
            <param name="longitude">The longitude in degrees to normalise</param>
            <returns>Longitude within the [-180,180] range</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.ReverseAngle(System.Double)">
            <summary>
            Reverses a number in the [0,PI] range
            </summary>
            <param name="radians">value in radians</param>
            <returns>The oposite angle</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.WrapValue(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Wraps the given number to the given range.
            If the wrapped value is exactly equal to min or max, favors max, unless favorMin is true.
            </summary>
            <param name="value">The value to wrap</param>
            <param name="min">The minimum bound of the range</param>
            <param name="max">The maximum bound of the range</param>
            <param name="favorMin">Whether or not to favor min over max in the case of ambiguity. Default is false</param>
            <returns>The value in the given range.</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Maths.ConstrainValue(System.Double,System.Double,System.Double)">
            <summary>
            Constrains the given number to the given range.
            </summary>
            <param name="value">The value to wrap</param>
            <param name="min">The minimum bound of the range</param>
            <param name="max">The maximum bound of the range</param>
            <returns>The value constrained to the given range</returns>
        </member>
        <member name="T:FC.GEPluginCtrls.NavigationControl">
            <summary>
            The available navigation control types in the plugin
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.NavigationControl.Large">
            <summary>
            The large navigation control type, used with GENavigationControl.setControlType().
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.NavigationControl.Small">
            <summary>
            The small navigation control type, used with GENavigationControl.setControlType().
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.ImageryBase">
            <summary>
            Enumeration of the available imagery bases for the plug-in
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ImageryBase.Earth">
            <summary>
            Earth imagery base
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ImageryBase.Mars">
            <summary>
            Mars imagery base
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ImageryBase.Moon">
            <summary>
            Moon imagery base
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.KmlHelpers">
            <summary>
            This class provides basic Kml helper methods
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlHelpers.WalkKmlDom(System.Object,System.Action{System.Object})">
            <summary>
            Based on kmldomwalk.js 
            see: http://code.google.com/p/earth-api-samples/source/browse/trunk/lib/kmldomwalk.js
            </summary>
            <param name="kmlObject">The kml object to parse</param>
            <param name="callBack">A delegate action, each node visited will be passed to this as the single parameter</param>
            <remarks>This method is used by <see cref="T:FC.GEPluginCtrls.KmlTreeView"/> to build the nodes</remarks>
            <example>KmlHelpers.WalkKmlDom(kml, (Action &lt; dynamic &gt; )(x =&gt; { /* each x in the dom */}));</example>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlHelpers.GetUrl(System.Object)">
            <summary>
             Gives access to Url element in pre KML Release 2.1 documents
             This allows the controls to work with legacy Kml formats
            </summary>
            <param name="kmlFeature">The network link to look for a url in</param>
            <returns>The url value or an empty string</returns>
            <remarks>This method is used by <see cref="T:FC.GEPluginCtrls.KmlTreeView"/> for legacy kml support</remarks>
            <example>string url = KmlHelpers.GetUrl(kmlObject);</example>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlHelpers.GetListItemType(System.Object)">
            <summary>
            Wrapper for getOwnerDocument().getComputedStyle().getListStyle().getListItemType()
            See: 
            </summary>
            <param name="kmlFeature">The feature to find the list item type of</param>
            <returns>The corresponding ListItem type <see cref="T:FC.GEPluginCtrls.ListItemStyle"/></returns>
            <remarks>This method is used by <see cref="T:FC.GEPluginCtrls.KmlTreeView"/> to build the nodes</remarks>
            <example>KmlHelpers.GetListItemType(kmlFeature)</example>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlHelpers.GetExtendedData(System.Object)">
            <summary>
            Gives access to untyped data/value pairs using the basic Data element
            See: http://code.google.com/apis/kml/documentation/kmlreference.html#extendeddata
            </summary>
            <param name="kmlFeature">feature to get data from</param>
            <returns>A list of key value pairs</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlHelpers.ComputeBounds(System.Object)">
            <summary>
            Computes the bounding box for the given object.
            Note that this method walks the object's DOM, so may have poor performance for large objects.
            In that case the use parallel option can speed the operation on some machines. 
            </summary>
            <param name="kmlFeature">{KmlFeature|KmlGeometry} object The feature or geometry whose bounds should be computed</param>
            <returns>The bounds object for the feature</returns>
            <remarks>
            Based on the methods at:
            http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/dom/utils.js
            </remarks>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlHelpers.CreateBoundsView(System.Object,FC.GEPluginCtrls.Geo.Bounds,System.Double,System.Double,System.Double)">
            <summary>
            Creates a kmlLookAt from a Bounds object.
            </summary>
            <param name="ge">the plugin</param>
            <param name="bounds">the bounds object to create the view of</param>
            <param name="aspectRatio">Optional aspect ratio</param>
            <param name="defaultRange">Optional default range</param>
            <param name="scaleRange">Optional scale range</param>
            <returns>The KmlLookAt for the bounds (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlHelpers.SetBoundsView(System.Object,FC.GEPluginCtrls.Geo.Bounds,System.Double,System.Double,System.Double)">
            <summary>
            Sets a Bounds object to the current plugin view
            </summary>
            <param name="ge">the plugin</param>
            <param name="bounds">the bounds object to create the view of</param>
            <param name="aspectRatio">Optional aspect ratio</param>
            <param name="defaultRange">Optional default range</param>
            <param name="scaleRange">Optional scale range</param>
        </member>
        <member name="T:FC.GEPluginCtrls.External">
            <summary>
            This COM Visible class contains all the public methods to be called from Javascript.
            The various events are used by the <see cref="T:FC.GEPluginCtrls.GEWebBrowser"/> when dealing with the plugin
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.External.kmlObjectCache">
            <summary>
            Stores fetched Kml Objects
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.External.#ctor">
            <summary>
            Initializes a new instance of the External class.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.External.DebugMessage(System.String)">
            <summary>
            Allow javascript to send debug messages
            </summary>
            <param name="message">the debug message</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.InvokeCallBack(System.String,System.Object)">
            <summary>
            Can be called from javascript to invoke method in managed code.
            </summary>
            <param name="name">the name of the managed method to be called</param>
            <param name="parameters">array of parameter objects</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.Ready(System.Object)">
            <summary>
            Called from javascript when the plugin is ready
            </summary>
            <param name="ge">the plugin instance</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.Error(System.String,System.String)">
            <summary>
            Called from javascript when there is an error
            </summary>
            <param name="message">the error message</param>
            <param name="type">the error type</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.KmlEventCallBack(System.Object,System.String)">
            <summary>
            Called from javascript when there is a kml event
            </summary>
            <param name="sender">the kml event</param>
            <param name="action">the event id</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.PluginEventCallBack(System.Object,System.String)">
            <summary>
            Called from javascript when there is a GEPlugin event
            </summary>
            <param name="sender">The plugin object</param>
            <param name="action">The event action</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.ViewEventCallBack(System.Object,System.String)">
            <summary>
            Called from javascript when there is a View event
            </summary>
            <param name="sender">The plugin object</param>
            <param name="action">The event action</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.OnPluginReady(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Protected method for raising the PluginReady event
            </summary>
            <param name="sender">The plugin object</param>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.OnKmlEvent(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Protected method for raising the KmlEvent event
            </summary>
            <param name="kmlEvent">The kmlEvent object</param>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.OnKmlLoaded(FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Protected method for raising the KmlLoaded event
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.OnKmlFetched(FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Protected method for capturing fetched IKmlObjects
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.OnScriptError(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Protected method for raising the ScriptError event
            </summary>
            <param name="sender">The sending object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.OnPluginEvent(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Protected method for raising the PluginEvent event
            </summary>
            <param name="sender">The sending object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.External.OnViewEvent(System.Object,FC.GEPluginCtrls.GEEventArgs)">
            <summary>
            Protected method for raising the ViewEvent event
            </summary>
            <param name="sender">The sending object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="E:FC.GEPluginCtrls.External.PluginReady">
            <summary>
            Raised when the plugin is ready
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.External.KmlEvent">
            <summary>
            Raised when there is a kml event
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.External.KmlLoaded">
            <summary>
            Raised when a kml/kmz file has loaded
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.External.ScriptError">
            <summary>
            Raised when there is a script error in the document 
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.External.PluginEvent">
            <summary>
            Raised when there is a GEPlugin event (frameend, balloonclose) 
            </summary>
        </member>
        <member name="E:FC.GEPluginCtrls.External.ViewEvent">
            <summary>
            Rasied when there is a viewchangebegin, viewchange or viewchangeend event 
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.External.KmlObjectCache">
            <summary>
            Gets the store of fetched IKmlObjects.
            Used in the process of synchronously loading networklinks
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.Geo.Coordinate">
            <summary>
            Coordinate class
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.#ctor(System.Double,System.Double,System.Double,FC.GEPluginCtrls.AltitudeMode)">
            <summary>
            Initializes a new instance of the Coordinate class.
            </summary>
            <param name="latitude">the Coordinate latitude</param>
            <param name="longitude">the Coordinate longitude</param>
            <param name="altitude">the Coordinate altitude</param>
            <param name="altitudeMode">the Coordinate altitudeMode</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the Coordinate class.
            </summary>
            <param name="apiObject">the api object to base the coordinate from</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the Coordinate class.
            </summary>
            <param name="coord">expects 2, 3 or 4 values
            [lat, lng] or
            [lat, lng, alt] or 
            [lat, lng, alt, (int)altMode]</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.#ctor(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Initializes a new instance of the Coordinate class.
            </summary>
            <param name="coord">the Coordinate to clone</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.op_Equality(FC.GEPluginCtrls.Geo.Coordinate,FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Coordinate equality operator 
            </summary>
            <param name="coord1">The first Coordinate</param>
            <param name="coord2">The Second Coordinate</param>
            <returns>True if the two coordinates are equal</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.op_Inequality(FC.GEPluginCtrls.Geo.Coordinate,FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Coordinate inequality operator 
            </summary>
            <param name="coord1">The first Coordinate</param>
            <param name="coord2">The Second Coordinate</param>
            <returns>True if the two coordinates are unequal</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.Distance(FC.GEPluginCtrls.Geo.Coordinate,System.Boolean)">
            <summary>
            Gets the distance in km from one Coordinate to another
            </summary>
            <param name="destination">The end Coordinate</param>
            <param name="haversine">Optionally use the haversine formula, default is false</param>
            <remarks>by defaut simple spherical trig (law of cosines) is used</remarks>
            <returns>The distance between the two Coordinates in km</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.Equals(System.Object)">
            <summary>
            Coordinate equality
            </summary>
            <param name="obj">the object to check against</param>
            <returns>true if the objects are equal</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.Equals(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Coordinate equality
            </summary>
            <param name="coord">the Coordinate to check against</param>
            <returns>true if the Coordinates are equal</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.Equals2D(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Coordinate 2D equality
            </summary>
            <param name="coord">the Coordinate to check latitude and longitude against</param>
            <returns>True if the Coordinates are equal in latitude and longitude</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.Flatten">
            <summary>
            Removes any altitude data from a Coordinate
            </summary>
            <returns>a Coordinate with no altitude data</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.BearingFinal(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Computes the final bearing to a Coordinate
            </summary>
            <param name="destination">the destination Coordinate</param>
            <returns>The final bearing to the destination Coordinate</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.BearingInitial(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Computes the inital bearing to a Coordinate
            </summary>
            <param name="destination">the destination Coordinate</param>
            <returns>The inital bearing to the destination Coordinate</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>the hash code for this instance.</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Coordinate.ToString">
            <summary>
            Returns a string that represents the current Coordinate (lat, lng, alt)
            </summary>
            <returns> (lat, lng, alt)</returns>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Coordinate.Latitude">
            <summary>
            Gets or sets the Coordinate Latitude
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Coordinate.Longitude">
            <summary>
            Gets or sets the Coordinate Longitude
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Coordinate.Altitude">
            <summary>
            Gets or sets the Coordinate Altitude
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Coordinate.AltitudeMode">
            <summary>
            Gets or sets the Coordinate AltitudeMode
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Coordinate.Is3D">
            <summary>
            Gets a value indicating whether the Coordinate is Three Dimensional
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.ListItemStyle">
            <summary>
            Enumeration of the available imagery bases for the plug-in.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ListItemStyle.Check">
            <summary>
            The feature's visibility is tied to its list item's checkbox state.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ListItemStyle.CheckOffOnly">
            <summary>
            When specified for a folder, document or network link, prevents all items from being made visible at once.
            That is, the user can turn all children off but cannot turn them all on at the same time.
            This setting is useful for containers or network links containing large amounts of data.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ListItemStyle.CheckHideChildren">
            <summary>
            Use a normal checkbox for visibility but do not display children in a list view.
            The item's checkbox should allows the user to toggle visibility of the child objects in the viewport.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ListItemStyle.RadioFolder">
            <summary>
            When specified for a container (a folder or a document), only one of the container's items should be visible at a time.
            *not yet supported in KmlTreeView*
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.KmlTreeViewNode">
            <summary>
            Custom node class for the KmlTreeView <see cref="T:FC.GEPluginCtrls.KmlTreeView"/>
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeViewNode.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the KmlTreeViewNode class.
            </summary>
            <param name="kmlObject">A kml object to base the treenode on</param>
            <remarks>
            The parent tree is usually is available via 'this.TreeView' but for added functionality
            we require access to some of the 'target' parent tree's properties in the constructor.
            This is the reason for passing it in as a parameter.
            </remarks>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeViewNode.SetStyle">
            <summary>
            Sets the icon style for the node
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeViewNode.Animate">
            <summary>
            Animates the icon style for the node.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.KmlTreeViewNode.TidyToolTip(System.String)">
            <summary>
            Clean any html and add linebreaks for use with tooltips.
            TODO : make this a lot better....
            </summary>
            <param name="source">a html string</param>
            <returns>plain text with linebreaks</returns>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.ToolTipText">
            <summary>
            Gets or sets the value of the node tool tip text.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.Fetched">
            <summary>
            Gets or sets a value indicating whether networklink content has been fetched.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.IsLoading">
            <summary>
            Gets a value indicating whether networklink content is loading.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.KmlType">
            <summary>
            Gets a value indicating the interface name (i.e. 'KmlPlacemark') of the underlying kml object.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.KmlUrl">
            <summary>
            Gets the url of the underlying kml object.
            <remarks>The url is obtained via kmlHelpers to support for legacy kml spcifications</remarks>
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.KmlListStyle">
            <summary>
            Gets the list style of the underlying kml object. Default is ListItemStyle.Check
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.ApiObject">
            <summary>
            Gets the underlying kml object that the node represents.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.KmlTreeViewNode.ApiObjectVisible">
            <summary>
            Gets or sets a value indicating whether the node is cheked and the kml object is visible
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GEToolStrip">
            <summary>
            Designer file
            </summary>
            <summary>
            The GEToolStrip provides a quick way to access and set the plugin options
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.navigationTextBox">
            <summary>
            The navigation text box
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.navigationTextBoxStringCollection">
            <summary>
            The string collection of entered terms in the navigationTextBox
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.submitButton">
            <summary>
            The navigation 'go' button
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.navigationSeparator">
            <summary>
            The naviagtion seperator
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.viewDropDownButton">
            <summary>
            The view drop down button
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.skyMenuItem">
            <summary>
            The sky menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.sunMenuItem">
            <summary>
            The sun menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.historyMenuItem">
            <summary>
            The history menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.optionsDropDownButton">
            <summary>
            The options drop down button
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.bordersMenuItem">
            <summary>
            The borders menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.buildingsMenuItem">
            <summary>
            The buildings menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.buildingsGreyMenuItem">
            <summary>
            The low-res buildings menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.roadsMenuItem">
            <summary>
            The roads menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.terrainMenuItem">
            <summary>
            The terrain menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.treesMenuItem">
            <summary>
            The trees menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.layersDropDownButton">
            <summary>
            The layers menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.controlsMenuItem">
            <summary>
            The controls menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.imperialUnitsMenuItem">
            <summary>
            The imperial units menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.fadeInOutMenuItem">
            <summary>
            The new item animation menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.statusBarMenuItem">
            <summary>
            The staus menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.gridMenuItem">
            <summary>
            The grid menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.overviewMapMenuItem">
            <summary>
            The overview map menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.scaleLegendMenuItem">
            <summary>
            The scale legend menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.atmosphereMenuItem">
            <summary>
            The atmosphere menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.imageryDropDownButton">
            <summary>
            The imagery drop down button
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.earthMenuItem">
            <summary>
            The earth menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.marsMenuItem">
            <summary>
            The mars menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.moonMenuItem">
            <summary>
            The moon menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.refreshButton">
            <summary>
            The refresh button
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.imageList1">
            <summary>
            The default image list
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.mouseNavigationMenuItem">
            <summary>
            The scale mouse navigation menu item
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.dropDownSeparator">
            <summary>
            The dropDownSeparator seperator
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.screenGrabButton">
            <summary>
            The print screen button
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.viewInMapsButton">
            <summary>
            The view in Maps button
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.languageSeparator">
            <summary>
            The language seperator
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.languageComboBox">
            <summary>
            The language combobox
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.geplugin">
            <summary>
            Use the IGEPlugin COM interface. 
            Equivalent to QueryInterface for COM objects
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.gewb">
            <summary>
            An instance of the current browser
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.geoptions">
            <summary>
            An instance of the options wrapper class
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.control">
            <summary>
            The plugin navigation cotrol 
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEToolStrip.navigationItemsVisible">
            <summary>
            Indicates whether the navigation items are visible
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.#ctor">
            <summary>
            Initializes a new instance of the GEToolStrip class.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.AddAutoCompleteSuggestions(System.String[])">
            <summary>
            Adds multiple entries to the Auto Compleate suggestion list
            </summary>
            <param name="suggestions">The suggestions to be entered</param>
            <example>GEToolStrip.AddAutoCompleteSuggestions(new string[] { "London", "Paris", "Rome" });</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.AddAutoCompleteSuggestions(System.String)">
            <summary>
            Adds an entry to the Auto Compleate suggestion list
            </summary>
            <param name="suggestion">The suggestion entry</param>
            <example>GEToolStrip.AddAutoCompleteSuggestions("London");</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.ClearAutoCompleteSuggestions">
            <summary>
            Removes all entries from the Auto Compleate suggestion list
            </summary>
            <example>GEToolStrip.ClearAutoCompleteSuggestions()</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.SetBrowserInstance(FC.GEPluginCtrls.GEWebBrowser)">
            <summary>
            Set the browser instance for the control to work with
            </summary>
            <param name="browser">The GEWebBrowser instance</param>
            <example>GEToolStrip.SetBrowserInstance(GEWebBrowser)</example>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.ResetToolStripDefaults">
            <summary>
            Resets the toolstrips menu items to match the default initialization state of the plug-in.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.SynchronizeOptions">
            <summary>
            Force the plug-in to confom to the tool-strip settings
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.BuildLanguageOptions">
            <summary>
            Builds the language combobox options from the Languages class
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.NavigationTextBox_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when the KeyUp event is rasied in the navigation text box
            </summary>
            <param name="sender">The text box</param>
            <param name="e">KeyEvent arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.NavigationButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the 'go' navigation button is clicked
            </summary>
            <param name="sender">The 'go' button</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.RefreshButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the refresh button is clicked
            </summary>
            <param name="sender">The sending object</param>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.LayersItem_Clicked(System.Object,System.EventArgs)">
            <summary>
            Called when an item in the layers menu is clicked 
            </summary>
            <param name="sender">layers menu</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.OptionsItem_Clicked(System.Object,System.EventArgs)">
            <summary>
            Called when an item in the options menu is clicked 
            </summary>
            <param name="sender">options menu</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.ViewItem_Clicked(System.Object,System.EventArgs)">
            <summary>
            Called when an item in the view menu is clicked 
            </summary>
            <param name="sender">view  menu</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.ImageryItem_Clicked(System.Object,System.EventArgs)">
            <summary>
            Called when an item in the imagery menu is clicked 
            </summary>
            <param name="sender">imagery menu</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.ScreenGrabButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the Screen grab button is clicked 
            </summary>
            <param name="sender">Screen grab button</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.ViewInMapsButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the view in maps button is clicked
            </summary>
            <param name="sender">View in maps button</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.GEToolStrip_Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Called when the tool strip layout changes
            </summary>
            <param name="sender">The ToolStrip</param>
            <param name="e">LayoutEvent arguments</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEToolStrip.LanguageComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Called whenever the language combobox selected index is changed
            </summary>
            <param name="sender">The language combobox</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowNavigationItems">
            <summary>
            Gets or sets a value indicating whether the navigation items are visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowLayersDropDown">
            <summary>
            Gets or sets a value indicating whether the Layers drop down is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowOptionsDropDown">
            <summary>
            Gets or sets a value indicating whether the Options drop down is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowViewDropDown">
            <summary>
            Gets or sets a value indicating whether the View drop down is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowImageryDropDown">
            <summary>
            Gets or sets a value indicating whether the Imagery drop down is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowScreenGrabButton">
            <summary>
            Gets or sets a value indicating whether the screen grab button is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowViewInMapsButton">
            <summary>
            Gets or sets a value indicating whether the view in maps button is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.ShowLanguageCombobox">
            <summary>
            Gets or sets a value indicating whether the language combobox is visible
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEToolStrip.NavigationAutoCompleteMode">
            <summary>
            Gets or sets the AutoCompleteMode of the navigation textbox
            Default is AutoCompleteMode.Append
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GEHelpers">
            <summary>
            This class provides some basic Google Earth plugin helpers functions.
            It is based on the "GEHelpers javasctipt library" by Roman Nurik
            See: http://earth-api-samples.googlecode.com/svn/trunk/lib/geplugin-helpers.js
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.AddFeaturesToPlugin(System.Object,System.Object)">
            <summary>
            This is a simple "ge.getFeatures().appendChild(kml)" wrapper
            </summary>
            <param name="ge">the plugin instance to add the features to</param>
            <param name="kml">the faetures to add</param>
            <exception cref="T:System.ArgumentException">Throws an exception if ge is not an instance of GEPlugin.</exception>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.CreatePlacemark(System.Object,System.Double,System.Double,System.Double,FC.GEPluginCtrls.AltitudeMode,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a kml placemark
            </summary>
            <param name="ge">The plugin instance</param>
            <param name="latitude">The placemark latitude in decimal degrees</param>
            <param name="longitude">The placemark longitude in decimal degrees</param>
            <param name="altitude">Optional placemark altitude in metres. Default is 0</param>
            <param name="altitudeMode">Optional altitudeMode. Default is AltitudeMode.RelativeToGround</param>
            <param name="id">Optional placemark Id. Default is empty</param>
            <param name="name">Optional name of the placemark. Default is empty</param>
            <param name="description">Optional placemark description text. Default is empty</param>
            <param name="addFeature">Optionally adds the placemark directly to the plugin. Default is true</param>
            <returns>A placemark (or an empty object)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.CreatePlacemark(System.Object,System.Object,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a kml placemark
            </summary>
            <param name="ge">The plugin instance</param>
            <param name="kmlPoint">A KmlPoint object to use for the placemark location.</param>
            <param name="id">Optional placemark Id. Default is empty</param>
            <param name="name">Optional name of the placemark. Default is empty</param>
            <param name="description">Optional placemark description text. Default is empty</param>
            <param name="addFeature">Optionally adds the placemark directly to the plugin. Default is true</param>
            <returns>A placemark (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.CreatePlacemark(System.Object,FC.GEPluginCtrls.Geo.Coordinate,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a kml placemark
            </summary>
            <param name="ge">The plugin instance</param>
            <param name="coord">A Coordinate to use as the placemarks location</param>
            <param name="id">Optional placemark Id. Default is empty</param>
            <param name="name">Optional name of the placemark. Default is empty</param>
            <param name="description">Optional placemark description text. Default is empty</param>
            <param name="addFeature">Optionally adds the placemark directly to the plugin. Default is true</param>
            <returns>A placemark (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.CreatePoint(System.Object,System.Double,System.Double,System.Double,FC.GEPluginCtrls.AltitudeMode,System.String)">
            <summary>
            Creates a kml point
            </summary>
            <param name="ge">The plugin instance</param>
            <param name="latitude">The placemark latitude in decimal degrees</param>
            <param name="longitude">The placemark longitude in decimal degrees</param>
            <param name="altitude">Optional placemark altitude in metres. Default is 0</param>
            <param name="altitudeMode">Optional altitudeMode. Default is AltitudeMode.RelativeToGround</param>
            <param name="id">Optional placemark Id. Default is empty</param>
            <returns>A Kml point (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.CreateLineString(System.Object,System.Object,System.Object,System.String,System.Boolean,System.Boolean)">
            <summary>
            Draws a line string between the given placemarks or points
            </summary>
            <param name="ge">The plugin instance</param>
            <param name="start">The first placemark or point</param>
            <param name="end">The second placemark or point</param>
            <param name="id">Optional ID of the linestring placemark. Default is empty</param>
            <param name="tessellate">Optionally sets tessellation for the linestring. Default is true</param>
            <param name="addFeature">Optionally adds the linestring directly to the plugin. Default is true</param>
            <returns>A linestring placemark (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.CreateHtmlStringBalloon(System.Object,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an Html String Balloon
            </summary>
            <param name="ge">The plugin instance</param>
            <param name="htmlString">The balloon content html string</param>
            <param name="minWidth">Optional minimum balloon width, default is 100</param>
            <param name="minHeight">Optional minimum balloon height, default is 100</param>
            <param name="maxWidth">Optional maximum balloon width, default is 800</param>
            <param name="maxHeight">Optional maximum balloon height, default is 600</param>
            <param name="setBalloon">Optionally set the balloon to be the current in the plugin</param>
            <returns>The feature balloon (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.EnableLayerById(System.Object,System.String,System.Boolean)">
            <summary>
            Enables or disables a plugin layer - wrapper for ge.getLayerRoot().enableLayerById()
            </summary>
            <param name="ge">The plugin instance</param>
            <param name="id">The id of the layer to work with</param>
            <param name="value">True turns the layer on, false off</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.FlyToObject(System.Object,System.Object,System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
            Attempts to set the view of the plugin to the given api object 
            </summary>
            <param name="ge">the plugin</param>
            <param name="obj">the api object</param>
            <param name="boundsFallback">Optionally set whether to fallback to the bounds method</param>
            <param name="aspectRatio">Optional aspect ratio</param>
            <param name="defaultRange">Optional default range</param>
            <param name="scaleRange">Optional scale range</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.GetAllFeaturesKml(System.Object)">
            <summary>
            Gets the Kml of all the features in the plug-in
            </summary>
            <param name="ge">The plugin</param>
            <returns>String of all the Kml from the plugin - or an empty string</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.GetCurrentViewAsPoint(System.Object)">
            <summary>
            Get the current pluin view as a point object
            </summary>
            <param name="ge">the plugin</param>
            <returns>Point set to the current view (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.GetTypeFromRcw(System.Object)">
            <summary>
            Depreciated: now the dynamic type is used and getType can be called directly.
            Get the type of an active scripting object from a generic runtime callable wrapper.
            This method attempts to invoke the member 'getType' on the given object.
            </summary>
            <param name="wrapper">The com object wrapper</param>
            <returns>The name of the type, or an empty string on failure</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.IsGe(System.Object)">
            <summary>
            Checks if the given object in an RCW is of the type GEPlugin
            </summary>
            <param name="wrapper">The object to check</param>
            <returns>true if the object is of the type GEPlugin </returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.LookAt(System.Object,System.Double,System.Double,System.String,System.Double,FC.GEPluginCtrls.AltitudeMode,System.Double,System.Double,System.Double)">
            <summary>
            Look at the given coordinates
            </summary>
            <param name="ge">the plugin</param>
            <param name="latitude">latitude in decimal degrees</param>
            <param name="longitude">longitude in decimal degrees</param>
            <param name="id">Optional LookAt Id. Default is empty</param>
            <param name="altitude">Optional altitude. Default is 0</param>
            <param name="altitudeMode">Optional altitudeMode. Default is AltitudeMode.RelativeToGround</param>
            <param name="heading">Optional heading in degrees. Default is 0 (north)</param>
            <param name="tilt">Optional tilt in degrees. Default is 0</param>
            <param name="range">Optional range in metres. Default is 1000</param>
            <returns>true on success</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.LookAt(System.Object,FC.GEPluginCtrls.GEWebBrowser)">
            <summary>
            Look at the given geometry 
            </summary>
            <param name="feature">the geomerty to look at</param>
            <param name="browser">A instance of the GEWebBrowser object</param>
            <returns>true on success</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.OpenFeatureBalloon(System.Object,System.Object,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Opens the balloon for the given feature in the plugin using OpenFeatureBalloon()
            </summary>
            <param name="ge">the plugin instance</param>
            <param name="feature">the feature to open a balloon for</param>
            <param name="useUnsafeHtml">Optional setting to use getBalloonHtmlUnsafe, default is false</param>
            <param name="minWidth">Optional minimum balloon width, default is 100</param>
            <param name="minHeight">Optional minimum balloon height, default is 100</param>
            <param name="maxWidth">Optional maximum balloon width, default is 800</param>
            <param name="maxHeight">Optional maximum balloon height, default is 600</param>
            <param name="setBalloon">Optionally set the balloon to be the current in the plugin</param>
            <returns>The feature balloon (or false)</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.RemoveAllFeatures(System.Object)">
            <summary>
            Remove all features from the plugin 
            </summary>
            <param name="ge">The plugin instance</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEHelpers.ShowCurrentViewInMaps(System.Object)">
            <summary>
            Displays the current plugin view in Google Maps using the default system browser
            </summary>
            <param name="ge">The plugin instance</param>
        </member>
        <member name="T:FC.GEPluginCtrls.HttpServer.Server">
            <summary>
            A simple HTTP server class to allow the use of local files
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.tcpListener">
            <summary>
            Server tcp listner
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.localHost">
            <summary>
            Server IP address
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.socket">
            <summary>
            Server socket 
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.port">
            <summary>
            Server port number
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.rootDirectory">
            <summary>
            Server root directory
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.defaultFileName">
            <summary>
            Default file name to look for in the root directory
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.httpVersion">
            <summary>
            The Server HTTP version
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.keepListening">
            <summary>
            Keep listening switch
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.HttpServer.Server.listenTask">
            <summary>
            Task for listining to incomming connections
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.#ctor">
            <summary>
            Initializes a new instance of the Server class
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Server class
            </summary>
            <param name="rootDirectory">The server root directory</param>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Server class
            </summary>
            <param name="rootDirectory">The server root directory</param>
            <param name="defaultFileName">Default file name to use</param>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.Start">
            <summary>
            Starts the server
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.Stop">
            <summary>
            Stops the server
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.GetLocalDirectory(System.String)">
            <summary>
            Get the local directory from a request uri
            </summary>
            <param name="requestUri">header Request-Uri</param>
            <returns>The local/root directory path</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.GetLocalFile(System.String)">
            <summary>
            Attempt to get the file name from a request uri
            </summary>
            <param name="requestUri">header Request-Uri</param>
            <returns>the filename, the default filename or and empty string</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.GetMimeType(System.String)">
            <summary>
            Gets the mime type for the given file type
            </summary>
            <param name="path">path to the file</param>
            <returns>the mime type of the file or "application/unknown"</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.SendError(System.Net.HttpStatusCode)">
            <summary>
            Sends an Error Header to the client (GoogleEarth)
            </summary>
            <param name="status">The Http Error Code</param>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.SendHeader(System.String,System.Int32,System.Net.HttpStatusCode)">
            <summary>
            Sends Header Information to the client (GoogleEarth)
            See http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html
            </summary>
            <param name="mime">MMIE (type) for the responce</param>
            <param name="bytes">Total Bytes to be sent in the body</param>
            <param name="code">The HTTP status code</param>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.SendToBrowser(System.String)">
            <summary>
            Sends body data to the client (GoogleEarth)
            </summary>
            <param name="data">The data to be sent to google earth (client)</param>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.SendToBrowser(System.Byte[])">
            <summary>
            Sends data to the client (Browser/GoogleEarth)
            </summary>
            <param name="data">The data to be sent to google earth (client)</param>
        </member>
        <member name="M:FC.GEPluginCtrls.HttpServer.Server.StartListen">
            <summary>
            Listen for incoming connections
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.HttpServer.Server.DefaultFileName">
            <summary>
            Gets or sets the default file name 
            The default value is "default.kml"
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.HttpServer.Server.IPAddress">
            <summary>
            Gets or sets the IP Address for the server to use 
            The default is 127.0.0.1 (localhost/loopback)
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.HttpServer.Server.RootDirectory">
            <summary>
            Gets or sets the root server directory (webroot) 
            http://localhost:port/ will point to this directory
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.HttpServer.Server.Port">
            <summary>
            Gets or sets a value indicating the port for the server to use
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GEOptions">
            <summary>
            Wrapper for the GEOptions com object.
            Maps all its getter and setter methods to managed properties
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEOptions.ge">
            <summary>
            The plugin object 
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GEOptions.options">
            <summary>
            The options object 
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GEOptions.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GEOptions class.
            </summary>
            <param name="ge">the plugin object</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GEOptions.SetMapType(FC.GEPluginCtrls.MapType)">
            <summary>
            Sets the map type to Earth or sky mode.
            </summary>
            <param name="mapType">The maptype to use in the plugin</param>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.AtmosphereVisibility">
            <summary>
            Gets or sets a value indicating whether to show the blue atmosphere that appears around the perimeter of the Earth
            On by default.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.AutoGroundLevelViewEnabled">
            <summary>
            Gets or sets a value indicating whether automatic ground level view is enabled.
            When enabled, the view will change to 'ground level view' when the camera reaches ground level.
            This view provides pan and lookAt controls, but no zoom slider. 
            The tilt will be set to 90, or parallel with level ground.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.BuildingHighlightingEnabled">
            <summary>
            Gets or sets a value indicating whether building highlighting is enabled. 
            When enabled, buildings will be highlighted when they are moused over.
            Disabled by default
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.BuildingSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether building selection is enabled. 
            If enabled, clicking a building will pop a feature balloon containing information from the Google 3D Warehouse database.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.FadeInOutEnabled">
            <summary>
            Gets or sets a value indicating whether animation of a features when added/removed from the plugin is enabled
            The animation consists of a slight change of scale.
            Default is true.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.FlyToSpeed">
            <summary>
            Gets or sets a value indicating the speed at which the camera moves (0 to 5.0).
            Set to SPEED_TELEPORT to immediately appear at selected destination.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.GridVisibility">
            <summary>
            Gets or sets a value indicating whether the grid is visible. Disabled by default.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.MouseNavigationEnabled">
            <summary>
            Gets or sets a value indicating whether user mouse control is enabled. Enabled by default.
            Note: This also enables and disables keyboard navigation (arrow keys, page-up/page-down, etc).
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.OverviewMapVisibility">
            <summary>
            Gets or sets a value indicating whether the overview map is visible. Disabled by default.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.ScaleLegendVisibility">
            <summary>
            Gets or sets a value indicating whether the scale legend is visible. Disabled by default.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.ScrollWheelZoomSpeed">
            <summary>
            Gets or sets a value indicating the speed of zoom when user rolls the mouse wheel. 
            Default is 1. Set to a negative number to reverse the zoom direction.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.StatusBarVisibility">
            <summary>
            Gets or sets a value indicating whether the status bar is visible. Disabled by default.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.TerrainExaggeration">
            <summary>
            Gets or sets a value indicating the terrain exaggeration value.
            Valid values are in the range of 1.0 through 3.0. 
            Attempting to set outside of this range will result in the value being clamped.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GEOptions.UnitsFeetMiles">
            <summary>
            Gets or sets a value indicating whether to display units in imperial (feet and miles)
            or metric (meters and kilometers). A value of true uses imperial, false metric.
            This setting affects only the values displayed in the status bar and the scale bar.
            The values passed and returned with an object's properties are always metric.
            Default value is false (metric)
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GENavigationControl">
            <summary>
            Wrapper used to used to manipulate the navigation controls in Google Earth.
            </summary>
            <remarks>http://code.google.com/apis/earth/documentation/reference/interface_g_e_navigation_control.html</remarks>
        </member>
        <member name="F:FC.GEPluginCtrls.GENavigationControl.ge">
            <summary>
            The plugin object
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GENavigationControl.navigation">
            <summary>
            The com navigation control
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.GENavigationControl.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GENavigationControl class.
            </summary>
            <param name="ge">GEPlugin COM object</param>
        </member>
        <member name="M:FC.GEPluginCtrls.GENavigationControl.#ctor(System.Object,FC.GEPluginCtrls.NavigationControl,FC.GEPluginCtrls.Visiblity,System.Boolean)">
            <summary>
            Initializes a new instance of the GENavigationControl class.
            </summary>
            <param name="ge">GEPlugin COM object</param>
            <param name="controlType">The control type. Defualt is NavigationControl.Large</param>
            <param name="visiblity">The visiblity of the control. Defualt is Visiblity.Show</param>
            <param name="streetViewEnabled">Optionally enables the streetview features. Default is true (on)</param>
        </member>
        <member name="P:FC.GEPluginCtrls.GENavigationControl.Type">
            <summary>
            Gets or sets the navigaton control type
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GENavigationControl.StreetViewEnabled">
            <summary>
            Gets or sets a value indicating whether the street view functionality is enabled
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.GENavigationControl.Visiblity">
            <summary>
            Gets or sets a value indicating whether the control is:
            always visible, always hidden, or visible only when the user intends to use the control.
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.MapType">
            <summary>
            Enumeration of the available map typs for the plug-in (earth/sky)
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.MapType.Earth">
            <summary>
            The Earth map type, used with GEOptions setMapType
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.MapType.Sky">
            <summary>
            The Earth map type, used with GEOptions setMapType
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.UnitSystem">
            <summary>
            Enumeration of the main distance units used in the plug-in
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.UnitSystem.Imperial">
            <summary>
            Imperial system of units (miles, feet, inches)
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.UnitSystem.Metric">
            <summary>
             Metric system of units (kilometers, metres, centimeters)
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Properties.Resources.Plugin">
             <summary>
               Looks up a localized string similar to &lt;!DOCTYPE html 
              PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;
              &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
            &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
              &lt;!--
              Copyright (c) 2008 Fraser Chapman
              Author: Fraser Chapman
              Email: fraser.chapman@gmail.com
              Date: 2009-01-25
              Summary:
              Plugin.html is part of FC.GEPluginCtrls
              FC.GEPluginCtrls is free software: you can redistribute it and/or modify
              it under the terms of the GNU General Public License as published by
              the Free Software  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.Geo.Bounds">
            <summary>
            Defines bounding objects
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.#ctor">
            <summary>
            Initializes a new instance of the Bounds class.
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.#ctor(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Initializes a new instance of the Bounds class.
            Single Coordinate constructor
            </summary>
            <param name="coord">the southwest/northEast Coordinate</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.#ctor(FC.GEPluginCtrls.Geo.Coordinate,FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Initializes a new instance of the Bounds class.
            Dual Coordinate constructor
            </summary>
            <param name="southwest">The southwest Coordinate</param>
            <param name="northEast">The northEast Coordinate</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.#ctor(FC.GEPluginCtrls.Geo.Bounds)">
            <summary>
            Initializes a new instance of the Bounds class.
            Bounds clone constructor
            </summary>
            <param name="bounds">The bounds object to copy</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.#ctor(System.Double[],System.Double[])">
            <summary>
            Initializes a new instance of the Bounds class.
            </summary>
            <param name="southWest">southeast coordinate [lat, lng]</param>
            <param name="northEast">northwest coordinate [lat, lng]</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.op_Equality(FC.GEPluginCtrls.Geo.Bounds,FC.GEPluginCtrls.Geo.Bounds)">
            <summary>
            Determines whether the specified Bounds objects are equal.
            </summary>
            <param name="bounds1">The first Bounds object</param>
            <param name="bounds2">The second Bounds object</param>
            <returns>true if the specified Bounds objects are equal</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.op_Inequality(FC.GEPluginCtrls.Geo.Bounds,FC.GEPluginCtrls.Geo.Bounds)">
            <summary>
            Determines whether the specified Bounds objects are unequal.
            </summary>
            <param name="bounds1">The first Bounds object</param>
            <param name="bounds2">The second Bounds object</param>
            <returns>true if the specified Bounds objects are unequal</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.ContainsCoordinate(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Returns whether or not the given Coordinate is inside the Bounds.
            </summary>
            <param name="coord">The Coordinate to test</param>
            <returns>True if the Coordinate is inside the Bounds</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.Center">
            <summary>
            Gets the center of the Bounds.
            </summary>
            <returns>The center of the Bounds as a Coordinate</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.Span">
            <summary>
            Returns the Bounds' latitude, longitude, and altitude span as a Coordinate
            </summary>
            <returns>A Coordinate object containing the lat, lng and alt of the Bounds span</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.Extend(FC.GEPluginCtrls.Geo.Coordinate)">
            <summary>
            Extends the bounds object by the given Coordinate, 
            if the bounds don't already contain the Coordinate.
            Longitudinally, the bounds will be extended either east or west, 
            whichever results in a smaller longitudinal span.
            </summary>
            <param name="coord">The Coordinate to extend the bounds by.</param>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current Bounds object.
            </summary>
            <param name="obj">The System.Object to compare with the current Bounds object.</param>
            <returns>true if the specified System.Object is equal to the current Bounds object</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.Equals(FC.GEPluginCtrls.Geo.Bounds)">
            <summary>
            Determines whether the specified Bounds objects are equal.
            </summary>
            <param name="bounds">The Bounds object to compare with the current Bounds object.</param>
            <returns>true if the specified Bounds object is equal to the current Bounds object</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.ToString">
            <summary>
            Returns a string that represents the current Bounds [(ne.lat, ne.lng, ne.alt), (sw.lat, sw.lng, sw.alt)]
            </summary>
            <returns>[(ne.lat, ne.lng, ne.alt), (sw.lat, sw.lng, sw.alt)]</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.ContainsLongitude(System.Double)">
            <summary>
            Returns whether or not the given line of longitude is inside the Bounds.
            </summary>
            <param name="longitude">The longitude to test.</param>
            <returns>True if the longitude is within the bounds</returns>
        </member>
        <member name="M:FC.GEPluginCtrls.Geo.Bounds.LongitudinalSpan(System.Double,System.Double)">
            <summary>
            Gets the longitudinal span of the given west and east decimal coordinates.
            </summary>
            <param name="west">the west coordinate</param>
            <param name="east">the east coordinate</param>
            <returns>the longitudinal span of the given west and east coordinates</returns>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.North">
            <summary>
            Gets the bounds' north coordinate.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.East">
            <summary>
            Gets the bounds' east coordinate.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.West">
            <summary>
            Gets the bounds' west coordinate.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.South">
            <summary>
            Gets the bounds' south coordinate.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.Top">
            <summary>
            Gets the bounds' maximum altitude.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.Bottom">
            <summary>
            Gets the bounds' minimum altitude.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.Is3D">
            <summary>
            Gets a value indicating whether or not the bounds have an altitude component.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.IsEmpty">
            <summary>
            Gets a value indicating whether or not the bounds is empty.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.IsFullLatitude">
            <summary>
            Gets a value indicating whether or not the bounds occupy the entire latitudinal range.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.IsFullLongitude">
            <summary>
            Gets a value indicating whether or not the bounds occupy the entire longitudinal range.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.CrossesAntimeridian">
            <summary>
            Gets a value indicating whether or not the bounds intersect the antimeridian.
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.NorthEast">
            <summary>
            Gets or sets the Bounds NorthEast Coordinate
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.Geo.Bounds.SouthWest">
            <summary>
            Gets or sets the Bounds SouthWest Coordinate
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.Visiblity">
            <summary>
            The available navigation control types in the plugin
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.Visiblity.Hide">
            <summary>
            Hide the UI element.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.Visiblity.Show">
            <summary>
            Show the UI element always.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.Visiblity.Auto">
            <summary>
            Automatically show or hide the UI element depending on user interaction.
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.GELayer">
            <summary>
            A collection the names of the internal hashs used by the plugin to control inbuilt plugin layers
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GELayer.Terrain">
            <summary>
            The Terrain layer
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GELayer.Buildings">
            <summary>
            The Buildings layer
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GELayer.BuildingsLowRes">
            <summary>
            The Low Resolution (grey) Buildings layer
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GELayer.Borders">
            <summary>
            The Borders layer
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GELayer.Trees">
            <summary>
            The Trees layer
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.GELayer.Roads">
            <summary>
            The Roads layer
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.EventId">
            <summary>
            The various plugin event ids
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.Click">
            <summary>
            The click event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.DblClick">
            <summary>
            The double click event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.MouseOver">
            <summary>
            The mouse over event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.MouseDown">
            <summary>
            The mouse down event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.MouseUp">
            <summary>
            The mouse up event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.MouseOut">
            <summary>
            The mouse out event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.MouseMove">
            <summary>
            The mouse move event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.FrameEnd">
            <summary>
            The frame end event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.BalloonClose">
            <summary>
            The balloon close event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.BalloonOpening">
            <summary>
            The balloon opening event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.ViewChangeBegin">
            <summary>
            The view change begin event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.ViewChange">
            <summary>
            The view change event id
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.EventId.ViewChangeEnd">
            <summary>
            The view change end event id
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.AltitudeMode">
            <summary>
            Enumeration of the available imagery bases for the plug-in.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.AltitudeMode.ClampToGround">
            <summary>
            Specifies that altitudes are at ground level.
            For Ground overlays, this means that the image will be draped over the terrain.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.AltitudeMode.RelativeToGround">
            <summary>
            Specifies that altitudes are to be interpreted as meters above or below ground level.
            (i.e. the elevation of the terrain at the location).
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.AltitudeMode.Absolute">
            <summary>
            Specifies that altitudes are to be interpreted as meters above or below sea level,
            regardless of the actual elevation of the terrain beneath the object.
            For example, if you set the altitude of an object to 10 meters with an absolute altitude mode,
            the object will appear to be at ground level if the terrain beneath is also 10 meters above sea level.
            If the terrain is 3 meters above sea level, the object will appear elevated above the terrain by 7 meters.
            If, on the other hand, the terrain is 15 meters above sea level, the object may be completely invisible.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.AltitudeMode.ClampToSeaFloor">
            <summary>
            Specifies that altitudes are at sea floor level.
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.AltitudeMode.RelativeToSeaFloor">
            <summary>
            Specifies that altitudes are to be interpreted as meters above sea floor.
            (i.e. the elevation of the sea floor at the location).
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.AltitudeMode.None">
            <summary>
            Specifies that no altitude is to be interpreted
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.ApiType">
            <summary>
            A collection the names of objects in the Google Earth API.
            These constants are usefull when checking the type of any object 
            that comes from outside managed 
            </summary>
            <remarks>This is a compleate list as of v1.007 of the API</remarks>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEAbstractBalloon">
            <summary>
            GEAbstractBalloon Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEControl">
            <summary>
            GEControl Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEEventEmitter">
            <summary>
            GEEventEmitter Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEFeatureBalloon">
            <summary>
            GEFeatureBalloon Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEFeatureContainer">
            <summary>
            GEFeatureContainer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEGEometryContainer">
            <summary>
            GEometryContainer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEGlobe">
            <summary>
            GEGlobe Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEHitTestResult">
            <summary>
            GEHitTestResult Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEHtmlBalloon">
            <summary>
            GEHtmlBalloon Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEHtmlDivBalloon">
            <summary>
            GEHtmlDivBalloon Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEHtmlStringBalloon">
            <summary>
            GEHtmlStringBalloon Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GELinearRingContainer">
            <summary>
            GELinearRingContainer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GENavigationControl">
            <summary>
            GENavigationControl Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEOptions">
            <summary>
            GEOptions Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEPhotoOverlayViewer">
            <summary>
            GEPhotoOverlayViewer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEPlugin">
            <summary>
            GEPlugin Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GESchemaObjectContainer">
            <summary>
            GESchemaObjectContainer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEStyleSelectorContainer">
            <summary>
            GEStyleSelectorContainer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GESun">
            <summary>
            GESun Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GETime">
            <summary>
            GETime Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GETimeControl">
            <summary>
            GETimeControl Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GETourPlayer">
            <summary>
            GETourPlayer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEView">
            <summary>
            GEView Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.GEWindow">
            <summary>
            GEWindow Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlAbstractView">
            <summary>
            KmlAbstractView Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlAltitudeGeometry">
            <summary>
            KmlAltitudeGeometry Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlBalloonOpeningEvent">
            <summary>
            KmlBalloonOpeningEvent Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlBalloonStyle">
            <summary>
            KmlBalloonStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlCamera">
            <summary>
            KmlCamera Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlColor">
            <summary>
            KmlColor Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlColorStyle">
            <summary>
            KmlColorStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlContainer">
            <summary>
            KmlContainer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlCoord">
            <summary>
            KmlCoord Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlCoordArray">
            <summary>
            KmlCoordArray Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlDateTime">
            <summary>
            KmlDateTime Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlDocument">
            <summary>
            KmlDocument Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlEvent">
            <summary>
            KmlEvent Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlExtrudableGeometry">
            <summary>
            KmlExtrudableGeometry Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlFeature">
            <summary>
            KmlFeature Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlFolder">
            <summary>
            KmlFolder Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlGeometry">
            <summary>
            KmlGeometry Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlGroundOverlay">
            <summary>
            KmlGroundOverlay Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlIcon">
            <summary>
            KmlIcon Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlIconStyle">
            <summary>
            KmlIconStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLabelStyle">
            <summary>
            KmlLabelStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLatLonAltBox">
            <summary>
            KmlLatLonAltBox Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLatLonBox">
            <summary>
            KmlLatLonBox Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLayer">
            <summary>
            KmlLayer Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLayerRoot">
            <summary>
            KmlLayerRoot Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLinearRing">
            <summary>
            KmlLinearRing Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLineString">
            <summary>
            KmlLineString Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLineStyle">
            <summary>
            KmlLineStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLink">
            <summary>
            KmlLink Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlListStyle">
            <summary>
            KmlListStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLocation">
            <summary>
            KmlLocation Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLod">
            <summary>
            KmlLod Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlLookAt">
            <summary>
            KmlLookA Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlModel">
            <summary>
            KmlModel  Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlMouseEvent">
            <summary>
            KmlMouseEvent Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlMultiGeometry">
            <summary>
            KmlMultiGeometry Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlNetworkLink">
            <summary>
            KmlNetworkLink Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlObject">
            <summary>
            KmlObject Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlObjectList">
            <summary>
            KmlObjectList Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlOrientation">
            <summary>
            KmlOrientation Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlOverlay">
            <summary>
            KmlOverlay Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlPhotoOverlay">
            <summary>
            KmlPhotoOverlay Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlPlacemark">
            <summary>
            KmlPlacemark Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlPoint">
            <summary>
            KmlPoint Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlPolygon">
            <summary>
            KmlPolygon Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlPolyStyle">
            <summary>
            KmlPolyStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlRegion">
            <summary>
            KmlRegion Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlScale">
            <summary>
            KmlScale Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlScreenOverlay">
            <summary>
            KmlScreenOverlay Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlStyle">
            <summary>
            KmlStyle Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlStyleMap">
            <summary>
            KmlStyleMap Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlStyleSelector">
            <summary>
            KmlStyleSelector Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlTimePrimitive">
            <summary>
            KmlTimePrimitive Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlTimeSpan">
            <summary>
            KmlTimeSpan Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlTimeStamp">
            <summary>
            KmlTimeStamp Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlTour">
            <summary>
            KmlTour Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlVec2">
            <summary>
            KmlVec2 Api name
            </summary>
        </member>
        <member name="F:FC.GEPluginCtrls.ApiType.KmlViewerOptions">
            <summary>
            KmlViewerOptions Api name
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.IHTMLScriptElement">
            <summary>
            A COM interface is needed because .NET does not provide a way
            to set the properties of a HTML script element.
            This negates the need to refrence mshtml
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.IHTMLScriptElement.Text">
            <summary>
            Sets the text property
            </summary>
        </member>
        <member name="P:FC.GEPluginCtrls.IHTMLScriptElement.Src">
            <summary>
            Sets the src property
            </summary>
        </member>
        <member name="T:FC.GEPluginCtrls.Languages">
            <summary>
            A class to provide the supported language codes
            Supported language codes are listed in the Google Maps API Coverage document
            see: http://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ
            </summary>
        </member>
        <member name="M:FC.GEPluginCtrls.Languages.GetList">
            <summary>
            Provides a Dictionary of language codes and native names 
            </summary>
            <returns>A Dictionary of language codes and native names</returns>
        </member>
    </members>
</doc>
